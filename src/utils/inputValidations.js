/*-------------------------------------------------------------------
|
|  üêØ Purpose: THIS FILE CONTAINS ALL THE VALIDATORS OBJECTS
|
*-------------------------------------------------------------------*/
// const USER_REGEX = /^[A-z][A-z0-9-_]{3,23}$/;
// const PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;
// const EMAIL_REGEX =/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/;
// const MOBILE_REGEX = /^\(?(\d{3})\)?[- ]?(\d{3})[- ]?(\d{4})$/;

export const firstName_validation = {
  name: "firstName",
  label: "‘±’∂’∏÷Ç’∂",
  type: "text",
  id: "firstName",
  placeholder: "‘±’∂’∏÷Ç’∂",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 30,
      message: "30 characters max",
    },
  },
};
export const lastName_validation = {
  name: "lastName",
  label: "‘±’¶’£’°’∂’∏÷Ç’∂",
  type: "text",
  id: "lastName",
  placeholder: "‘±’¶’£’°’∂’∏÷Ç’∂",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 30,
      message: "30 characters max",
    },
  },
};
export const midName_validation = {
  name: "midName",
  label: "’Ä’°’µ÷Ä’°’∂’∏÷Ç’∂",
  type: "text",
  id: "midName",
  placeholder: "’Ä’°’µ÷Ä’°’∂’∏÷Ç’∂",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 30,
      message: "30 characters max",
    },
  },
};
export const user_validation = {
  name: "user",
  label: "‘æ’°’Æ’Ø’°’∂’∏÷Ç’∂",
  type: "text",
  id: "user",
  placeholder: "‘æ’°’Æ’Ø’°’∂’∏÷Ç’∂",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 30,
      message: "30 characters max",
    },
  },
};
export const password_validation = {
  name: "password",
  label: "‘æ’°’Æ’Ø’°’£’´÷Ä",
  type: "password",
  id: "password",
  placeholder: "‘æ’°’Æ’Ø’°’£’´÷Ä",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    minLength: {
      value: 6,
      message: "min 6 characters",
    },
  },
};
export const passport_validation = {
  name: "passport",
  label: "‘±’∂’±’∂’°’£’´÷Ä/ID",
  type: "text",
  id: "passport",
  placeholder: "‘±’∂’±’∂’°’£’´÷Ä/ID",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
  },
};
export const position_validation = {
  name: "position",
  label: "’ä’°’∑’ø’∏’∂",
  type: "text",
  id: "position",
  placeholder: "’ä’°’∑’ø’∏’∂",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 30,
      message: "30 characters max",
    },
  },
};
export const tin_validation = {
  name: "tin",
  label: "’Ä’é’Ä’Ä",
  type: "number",
  id: "tin",
  placeholder: "’Ä’é’Ä’Ä",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
  },
};
export const bankName_validation = {
  name: "bankName",
  label: "‘≤’°’∂’Ø",
  type: "text",
  id: "bankName",
  placeholder: "‘≤’°’∂’Ø",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
  },
};
export const bankAccNumber_validation = {
  name: "bankAccNumber",
  label: "’Ä/’Ä",
  type: "number",
  id: "bankAccNumber",
  placeholder: "’Ä/’Ä",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
  },
};
export const director_validation = {
  name: "director",
  label: "’è’∂÷Ö÷Ä’•’∂",
  type: "text",
  id: "director",
  placeholder: "’è’∂÷Ö÷Ä’•’∂",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
  },
};
export const medInstitution_validation = {
  name: "medInstitution",
  label: "‘±’∑’≠’°’ø’°’æ’°’µ÷Ä",
  type: "text",
  id: "medInstitution",
  placeholder: "‘±’∑’≠’°’ø’°’æ’°’µ÷Ä",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
  },
};
export const shortName_validation = {
  name: "shortName",
  label: "’Ä’°’∫’°’æ’∏÷Ç’¥",
  type: "text",
  id: "shortName",
  placeholder: "’Ä’°’∫’°’æ’∏÷Ç’¥",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 30,
      message: "30 characters max",
    },
  },
};
export const category_validation = {
  name: "category",
  label: "‘ø’°’ø’•’£’∏÷Ä’´’°",
  type: "text",
  id: "category",
  placeholder: "‘ø’°’ø’•’£’∏÷Ä’´’°",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 30,
      message: "30 characters max",
    },
  },
};
export const researchUnit_validation = {
  name: "researchUnit",
  label: "’Ä’•’ø’°’¶’∏’ø’∏÷Ç’©’µ’°’∂ ’¥’´’°’æ’∏÷Ä",
  type: "text",
  id: "researchUnit",
  placeholder: "’Ä’•’ø’°’¶’∏’ø’∏÷Ç’©’µ’°’∂ ’¥’´’°’æ’∏÷Ä",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 30,
      message: "30 characters max",
    },
  },
};
export const referenceRange_validation = {
  name: "referenceRange",
  label: "’Ä’•’ø’°’¶’∏’ø’∏÷Ç’©’µ’°’∂ ’∂’∏÷Ä’¥’°",
  type: "text",
  id: "referenceRange",
  placeholder: "’Ä’•’ø’°’¶’∏’ø’∏÷Ç’©’µ’°’∂ ’∂’∏÷Ä’¥’°",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 30,
      message: "30 characters max",
    },
  },
};
export const birthday_validation = {
  name: "birthday",
  label: "‘æ’∂’∂’§’µ’°’∂ ’°’¥’Ω’°’©’´’æ",
  type: "text",
  id: "birthday",
  placeholder: "DD/MM/YYYY",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 10,
      message: "10 symbols max",
    },
  },
};
export const age_validation = {
  name: "age",
  label: "’è’°÷Ä’´÷Ñ",
  type: "number",
  id: "age",
  placeholder: "’è’°÷Ä’´÷Ñ",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 3,
      message: "3 numbers max",
    },
  },
};
export const address_validation = {
  name: "address",
  label: "’Ä’°’Ω÷Å’•",
  type: "text",
  id: "address",
  placeholder: "’Ä’°’Ω÷Å’•",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
  },
};
export const email_validation = {
  name: "email",
  label: "‘∑’¨‚Ä§ ’∞’°’Ω÷Å’•",
  type: "email",
  id: "email",
  placeholder: "‘∑’¨‚Ä§ ’∞’°’Ω÷Å’•",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    pattern: {
      value:
        /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
      message: "not valid",
    },
  },
};
export const contactEmail_validation = {
  name: "contactEmail",
  label: "‘∑’¨‚Ä§ ’∞’°’Ω÷Å’•",
  type: "email",
  id: "contactEmail",
  placeholder: "‘∑’¨‚Ä§ ’∞’°’Ω÷Å’•",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    pattern: {
      value:
        /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
      message: "not valid",
    },
  },
};
export const mobile_validation = {
  name: "mobile",
  label: "’Ä’•’º’°’≠’∏’Ω",
  type: "text",
  id: "mobile",
  placeholder: "’Ä’•’º’°’≠’∏’Ω",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 15,
      message: "15 numbers max",
    },
  },
};
export const contactMobile_validation = {
  name: "contactMobile",
  label: "’Ä’•’º’°’≠’∏’Ω",
  type: "text",
  id: "contactMobile",
  placeholder: "’Ä’•’º’°’≠’∏’Ω",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 15,
      message: "15 numbers max",
    },
  },
};
export const name_validation = {
  name: "name",
  label: "‘±’∂’æ’°’∂’∏÷Ç’¥",
  type: "text",
  id: "name",
  placeholder: "‘±’∂’æ’°’∂’∏÷Ç’¥",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 30,
      message: "30 characters max",
    },
  },
};
export const contactName_validation = {
  name: "contactName",
  label: "‘±’∂’∏÷Ç’∂",
  type: "text",
  id: "contactName",
  placeholder: "‘±’∂’∏÷Ç’∂",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 30,
      message: "30 characters max",
    },
  },
};
export const fullName_validation = {
  name: "fullName",
  label: "‘±’∂’∏÷Ç’∂ ’°’¶’£’°’∂’∏÷Ç’∂",
  type: "text",
  id: "fullName",
  placeholder: "‘±’∂’∏÷Ç’∂ ’°’¶’£’°’∂’∏÷Ç’∂",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 30,
      message: "30 characters max",
    },
  },
};
export const additional_validation = {
  name: "additional",
  label: "’Ä’°’æ’•’¨’µ’°’¨ ’ø’æ’µ’°’¨’∂’•÷Ä",
  type: "text",
  id: "additional",
  placeholder: "’Ä’°’æ’•’¨’µ’°’¨ ’ø’æ’µ’°’¨’∂’•÷Ä",
  validation: {
    required: false,
    maxLength: {
      value: 30,
      message: "30 characters max",
    },
  },
};
export const doctorState_validation = {
  name: "doctorState",
  label: "‘ø’°÷Ä’£’°’æ’´’≥’°’Ø",
  type: "text",
  id: "doctorState",
  placeholder: "‘ø’°÷Ä’£’°’æ’´’≥’°’Ø",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 30,
      message: "30 characters max",
    },
  },
};
export const specialty_validation = {
  name: "specialty",
  label: "’Ñ’°’Ω’∂’°’£’´’ø’∏÷Ç’©’µ’∏÷Ç’∂",
  type: "text",
  id: "specialty",
  placeholder: "’Ñ’°’Ω’∂’°’£’´’ø’∏÷Ç’©’µ’∏÷Ç’∂",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 30,
      message: "30 characters max",
    },
  },
};
export const licenseNumber_validation = {
  name: "licenseNumber",
  label: "‘º’´÷Å’•’∂’¶’°’æ’∏÷Ä’¥’°’∂ ’∞’°’¥’°÷Ä",
  type: "text",
  id: "licenseNumber",
  placeholder: "‘º’´÷Å’•’∂’¶’°’æ’∏÷Ä’¥’°’∂ ’∞’°’¥’°÷Ä",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 30,
      message: "30 characters max",
    },
  },
};
export const qualification_validation = {
  name: "qualification",
  label: "’à÷Ä’°’Ø’°’æ’∏÷Ä’∏÷Ç’¥",
  type: "text",
  id: "qualification",
  placeholder: "’à÷Ä’°’Ø’°’æ’∏÷Ä’∏÷Ç’¥",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 30,
      message: "30 characters max",
    },
  },
};
export const model_validation = {
  name: "model",
  label: "’ç’°÷Ä÷Ñ’´ ’¥’∏’§’•’¨",
  type: "text",
  id: "model",
  placeholder: "’ç’°÷Ä÷Ñ’´ ’¥’∏’§’•’¨",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 30,
      message: "30 characters max",
    },
  },
};
export const equipmentType_validation = {
  name: "equipmentType",
  label: "’ç’°÷Ä÷Ñ’´ ’ø’•’Ω’°’Ø",
  type: "text",
  id: "equipmentType",
  placeholder: "’ç’°÷Ä÷Ñ’´ ’ø’•’Ω’°’Ø",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 30,
      message: "30 characters max",
    },
  },
};
export const type_validation = {
  name: "type",
  label: "’è’•’Ω’°’Ø",
  type: "text",
  id: "type",
  placeholder: "’è’•’Ω’°’Ø",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 30,
      message: "30 characters max",
    },
  },
};
export const manufacturer_validation = {
  name: "manufacturer",
  label: "‘±÷Ä’ø’°’§÷Ä’∏’≤",
  type: "text",
  id: "manufacturer",
  placeholder: "‘±÷Ä’ø’°’§÷Ä’∏’≤",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 30,
      message: "50 characters max",
    },
  },
};
export const serialNumber_validation = {
  name: "serialNumber",
  label: "’ç’•÷Ä’´’°’Ø’°’∂ ’∞’°’¥’°÷Ä",
  type: "text",
  id: "serialNumber",
  placeholder: "’ç’•÷Ä’´’°’Ø’°’∂ ’∞’°’¥’°÷Ä",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 50,
      message: "50 characters max",
    },
  },
};
export const location_validation = {
  name: "locationValid",
  label: "’è’•’≤’°’Ø’°’µ’∏÷Ç’¥’®",
  type: "text",
  id: "locationValid",
  placeholder: "’è’•’≤’°’Ø’°’µ’∏÷Ç’¥’®",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 30,
      message: "30 characters max",
    },
  },
};
export const price_validation = {
  name: "price",
  label: "‘±÷Ä’™’•÷Ñ",
  type: "number",
  id: "price",
  placeholder: "‘±÷Ä’™’•÷Ñ",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 10,
      message: "10 characters max",
    },
  },
};
export const unit_validation = {
  name: "unit",
  label: "’â’°÷É’¥’°’∂ ’¥’´’°’æ’∏÷Ä",
  type: "text",
  id: "unit",
  placeholder: "’â’°÷É’¥’°’∂ ’¥’´’°’æ’∏÷Ä",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 30,
      message: "30 characters max",
    },
  },
};

export const currency_validation = {
  name: "currency",
  label: "‘±÷Ä’™’∏÷Ç’µ’©",
  type: "text",
  id: "currency",
  placeholder: "‘±÷Ä’™’∏÷Ç’µ’©",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 30,
      message: "30 characters max",
    },
  },
};
export const usage_validation = {
  name: "usage",
  label: "‘ø’´÷Ä’°’º’∏÷Ç’©’µ’∏÷Ç’∂",
  type: "text",
  id: "usage",
  placeholder: "‘ø’´÷Ä’°’º’∏÷Ç’©’µ’∏÷Ç’∂",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 30,
      message: "30 characters max",
    },
  },
};
export const producer_validation = {
  name: "producer",
  label: "‘π’∏’≤’°÷Ä’Ø’∏’≤",
  type: "text",
  id: "producer",
  placeholder: "‘π’∏’≤’°÷Ä’Ø’∏’≤",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 30,
      message: "30 characters max",
    },
  },
};

export const desc_validation = {
  name: "description",
  label: "’Ü’Ø’°÷Ä’°’£’´÷Ä",
  multiline: true,
  id: "description",
  placeholder: "’Ü’Ø’°÷Ä’°’£’´÷Ä",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 200,
      message: "200 characters max",
    },
  },
};
export const class_validation = {
  name: "class",
  label: "‘¥’°’Ω’°’Ø’°÷Ä’£",
  multiline: true,
  id: "class",
  placeholder: "‘¥’°’Ω’°’Ø’°÷Ä’£",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 200,
      message: "200 characters max",
    },
  },
};
export const state_validation = {
  name: "state",
  label: "’Ñ’°÷Ä’¶",
  multiline: true,
  id: "state",
  placeholder: "’Ñ’°÷Ä’¶",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 200,
      message: "200 characters max",
    },
  },
};
export const city_validation = {
  name: "city",
  label: "’î’°’≤’°÷Ñ/‘≥’µ’∏÷Ç’≤",
  multiline: true,
  id: "city",
  placeholder: "’î’°’≤’°÷Ñ/‘≥’µ’∏÷Ç’≤",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 200,
      message: "200 characters max",
    },
  },
};
export const country_validation = {
  name: "country",
  label: "‘µ÷Ä’Ø’´÷Ä",
  multiline: true,
  id: "country",
  placeholder: "‘µ÷Ä’Ø’´÷Ä",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 200,
      message: "200 characters max",
    },
  },
};
export const street_validation = {
  name: "street",
  label: "’ì’∏’≤’∏÷Å",
  multiline: true,
  id: "street",
  placeholder: "’ì’∏’≤’∏÷Å",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 200,
      message: "200 characters max",
    },
  },
};
export const zipCode_validation = {
  name: "zipCode",
  label: "’ì’∏’Ω’ø’°’µ’´’∂ ’∞’°’¥’°÷Ä",
  multiline: true,
  id: "zipCode",
  placeholder: "’ì’∏’Ω’ø’°’µ’´’∂ ’∞’°’¥’°÷Ä",
  validation: {
    required: {
      value: false,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 200,
      message: "200 characters max",
    },
  },
};
export const emergencyContactName_validation = {
  name: "emergencyContactName",
  label: "‘º÷Ä’°÷Å’∏÷Ç÷Å’´’π ’Ø’∏’∂’ø’°’Ø’ø",
  multiline: true,
  id: "emergencyContactName",
  placeholder: "‘º÷Ä’°÷Å’∏÷Ç÷Å’´’π ’Ø’∏’∂’ø’°’Ø’ø",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 200,
      message: "200 characters max",
    },
  },
};
export const emergencyContactNumber_validation = {
  name: "emergencyContactNumber",
  label: "‘º÷Ä’°÷Å’∏÷Ç÷Å’´’π ’Ø’∏’∂’ø’°’Ø’ø’´ ’∞’•’º’°’≠’∏’Ω",
  multiline: true,
  type: "number",
  id: "emergencyContactNumber",
  placeholder: "‘º÷Ä’°÷Å’∏÷Ç÷Å’´’π ’Ø’∏’∂’ø’°’Ø’ø ’∞’•’º’°’≠’∏’Ω",
  validation: {
    required: {
      value: true,
      message: "’∫’°÷Ä’ø’°’§’´÷Ä",
    },
    maxLength: {
      value: 200,
      message: "200 characters max",
    },
  },
};
